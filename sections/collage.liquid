{%- liquid

  if section.settings.display_wide
    assign display_wide = true
  endif

  assign section_space = section.settings.section_space
  assign section_space_class = ''

  if section_space == 'top'
    assign section_space_class = ' pb0'
  elsif section_space == 'bottom'
    assign section_space_class = ' mt0'
  elsif section_space == 'none'
    assign section_space_class = ' mt0 pb0'
  endif

-%}


<section class="textWithImage__column-section section-{{ section.id }} global__section{{ section_space_class }}" data-section-id="{{ section.id }}">
  {% unless display_wide %}
  <div class="row">
  {% endunless %}
  <div class="textWithImage__column-scroll">
    <div class="textWithImage__column-container section-{{ section.id }}{% if section.settings.no_space %} no-space{% endif %}{% unless section.settings.display_wide %} with-padding{% endunless %}">
    {% for block in section.blocks %}

    {%- liquid

      case block.settings.image_size
        when 'small'
          assign image_height = '250px'
        when 'medium'
          assign image_height = '450px'
        when 'large'
          assign image_height = '800px'
      endcase

      assign link = block.settings.link
      assign image = block.settings.image
      assign title = block.settings.title_text
      assign text = block.settings.text
      assign button = block.settings.button_text
      assign frac = block.settings.column_size

      assign has_link = false
      assign has_image = false
      assign has_title = false
      assign has_text = false
      assign has_button = false
      assign is_centered = false

      if link != blank
        assign has_link = true
      endif

      if image != blank
        assign has_image = true
      endif

      if title != blank
        assign has_title = true
      endif

      if text != blank
        assign has_text = true
      endif

      if button != blank and link != blank
        assign has_button = true
      endif

      if block.settings.center_align
        assign is_centered = true
      endif

      assign total = total | plus: block.settings.column_size

    -%}

      <div class="textWithImage__column {% if is_centered %}center {% endif %}block-{{ block.id }}" data-block-type="{{ block.type }}" {{ block.shopify_attributes }}>
        {% case block.type %}
          {% when 'image' %}
            {% liquid
              assign loading = 'lazy'
              assign fetch_priority = 'auto'
              if section.index == 1 and total <= 6
                assign loading = 'eager'
                assign fetch_priority = 'high'
              endif
             %}
            {% if has_link %}<a href="{{ link }}">{% endif %}
              {% if has_image %}
              <div class="textWithImage__column-image">
                {%
                  render 'basic-responsive-image',
                  type: image,
                  width: 1200,
                  loading: loading,
                  fetchpriority: fetch_priority
                %}
              </div>
              {% else %}
                <div class="onboard">
                {{ 'image' | placeholder_svg_tag: 'placeholder-svg' }}
                </div>
              {% endif %}
            {% if has_link %}</a>{% endif %}
          {% when 'text' %}
            <div class="textWithImage__column-caption">
              {% if has_title %}
                <h3>{{ title | escape }}</h3>
              {% endif %}
              {% if has_text %}
                <div class="rte">
                  {{ text }}
                </div>
              {% endif %}
              {% if has_link %}<a href="{{ link }}">{% endif %}
                {% if has_button %}
                <div class="textWithImage__column-btn-wrapper">
                  <a href="{{ link }}">{{ button | escape }}</a>
                </div>
                {% endif %}
              {% if has_link %}</a>{% endif %}
            </div>
        {% endcase %}

        <style>
          .textWithImage__column.block-{{ block.id }} {
              grid-column: auto / span {{ frac }};
          }
          {% unless block.settings.image_size == 'none' %}
            .textWithImage__column-container.section-{{ section.id }} .textWithImage__column.block-{{ block.id }} .textWithImage__column-image,
            .textWithImage__column-container.section-{{ section.id }} .textWithImage__column.block-{{ block.id }} .onboard {
              height: {{ image_height }};
              overflow: hidden;
            }
            .textWithImage__column-container.section-{{ section.id }} .textWithImage__column.block-{{ block.id }} .textWithImage__column-image .box-ratio {
              padding-bottom: {{ image_height }} ! important;
            }
            .textWithImage__column-container.section-{{ section.id }} .textWithImage__column.block-{{ block.id }} .textWithImage__column-image img {
              height: {{ image_height }};
              object-fit: cover;
              object-position: center;
            }
            @media screen and (max-width: 740px) {
                {% if block.settings.image_size == 'small' %}
                {% assign image_height = '220px' %}
                {% else %}
                {% assign image_height = '300px' %}
                {% endif %}
              .textWithImage__column-container.section-{{ section.id }} .textWithImage__column.block-{{ block.id }} .textWithImage__column-image {
                height: {{ image_height }};
              }
              .textWithImage__column-container.section-{{ section.id }} .textWithImage__column.block-{{ block.id }} .textWithImage__column-image .box-ratio {
                padding-bottom: {{ image_height }} ! important;
              }
              .textWithImage__column-container.section-{{ section.id }} .textWithImage__column.block-{{ block.id }} .textWithImage__column-image img {
                height: {{ image_height }};
              }
            }
          {% endunless %}
        </style>
      </div>
    {% endfor %}
    </div>
  </div>
  {% if section.blocks.size == 0 %}
    {% render 'no-blocks' %}
  {% endif %}

  {% unless display_wide %}
  </div>
  {% endunless %}





</section>

<div class="clear"></div>


{% schema %}
{
  "name": "Collage",
  "max_blocks": 10,
  "settings": [
    {
      "type": "paragraph",
      "content": "Add image or text blocks to a 6 column grid. Within each block use the controls to set how many columns each will take up"
    },
    {
      "type": "checkbox",
      "id": "display_wide",
      "label": "Full width",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "no_space",
      "label": "No space between blocks",
      "default": false
    },
    {
      "type": "select",
      "id": "section_space",
      "label": "Section spacing",
      "default": "top_and_bottom",
      "options": [
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        },
        {
          "value": "top_and_bottom",
          "label": "Top and bottom"
        },
        {
          "value": "none",
          "label": "None"
        }
      ]
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Image block",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "800px x 800px recommended"
        },
        {
          "type": "select",
          "id": "image_size",
          "label": "Image height",
          "default": "none",
          "options": [
            {
              "value": "none",
              "label": "Natural"
            },
            {
              "value": "small",
              "label": "Small"
            },
            {
              "value": "medium",
              "label": "Medium"
            },
            {
              "value": "large",
              "label": "Large"
            }
          ]
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link",
          "info": "Optional"
        },
        {
          "type": "range",
          "id": "column_size",
          "min": 1,
          "max": 6,
          "step": 1,
          "label": "Block size (maximum of 6 per row)",
          "default": 2,
          "info": "Choose how many blocks this will fill"
        }
      ]
    },
    {
      "type": "text",
      "name": "Text block",
      "settings": [
        {
          "type": "text",
          "id": "title_text",
          "label": "Heading",
          "default": "Our collections"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Add text blocks to call out features, updates and more.</p>"
        },
        {
          "type": "checkbox",
          "id": "center_align",
          "label": "Center align text",
          "default": false
        },
        {
          "type": "range",
          "id": "column_size",
          "min": 1,
          "max": 6,
          "step": 1,
          "label": "Block size (maximum of 6 per row)",
          "default": 2,
          "info": "Choose how many blocks this will fill"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collage",
      "blocks": [
        {
          "type": "text"
        },
        {
          "type": "image"
        },
        {
          "type": "image"
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": ["header", "footer"]
  }
}
{% endschema %}
